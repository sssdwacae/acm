#include<iostream>


using namespace std;

const int N=2000;
int main()
{
    
    int maps[N][N];
    for(int i=1;i<=N;i++)
        for(int j=1;j<=N;j++)
        {if(i==j)
            maps[i][j]=0;//起点和终点相同，路程为0
         else
            maps[i][j]=INT_MAX;//一开始没有路，则全部是无穷大
        
        }
    int n,m;//假设有n条路,m个城市
    cin>>n;
    int a,b,c;
    for(int i=1;i<=n;i++)
    {cin>>a>>b>>c;
     maps[a][b]=c;
     maps[b][a]=c;//假设是双向路
     
        
    }
    for(int i=1;i<=m;i++)//枚举用来松弛的点
        for(int j=1;j<=m;j++)
            for(int k=1;k<=m;k++)
            {
                
                if(maps[j][k]<maps[j][i]+maps[i][k]);//通过该点松弛后距离变小了
                maps[j][k]=maps[j][i]+maps[i][k];
                
            
            }
                
    
    
    cout<<maps[][]<<endl;//求得任意2点间的最短路
}

